version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - mybridge

  kafka1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"
    networks:
      - mybridge
    volumes:
      - kafka1-data:/var/lib/kafka/data

  kafka2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka2
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9093:9093"
    networks:
      - mybridge
    volumes:
      - kafka2-data:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    hostname: kafka-ui
    ports:
      - "8083:8080"
    depends_on:
      - kafka1
      - kafka2
      - zookeeper
    environment:
      KAFKA_CLUSTERS_0_NAME: "Meu Cluster Kafka"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka1:9092,kafka2:9093"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
    networks:
      - mybridge

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - mybridge

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local=redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - mybridge

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - mybridge

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
      - ./minio-backup:/backup
    command: server /data --console-address ":9001"
    networks:
      - mybridge

  pipeline:
    build:
      context: .
    container_name: pipeline-service
    depends_on:
      - kafka1
      - redis
      - rabbitmq
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    command: sh -c "sleep 10 && python pipeline.py"
    volumes:
      - .:/app
    working_dir: /app
    networks:
      - mybridge
  streamlit_app:
    #build: # previous ./streamlit_app
    build:
      context: .
      dockerfile: Dockerfile
    container_name: streamlit-app 
        
    networks:
      - mybridge
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis

networks:
  mybridge:
    driver: bridge

volumes:
  rabbitmq_data:
  minio-data:
  kafka1-data:
  kafka2-data:
